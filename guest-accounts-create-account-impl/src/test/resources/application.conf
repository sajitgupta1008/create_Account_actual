#
# Copyright (C) 2016 Lightbend Inc. <http://www.lightbend.com>
#
play.modules.enabled += com.rccl.middleware.guest.impl.GuestAccountModule
play.modules.enabled += com.rccl.middleware.guest.impl.ConfigurationServiceLocatorModule

lagom.broker.kafka.brokers = "tcp://localhost:9092"
lagom.broker.kafka.brokers = ${?KAFKA_BOOTSTRAP_SERVERS}
lagom.persistence.ask-timeout = 1000s

kafka.link-loyalty.topic.name = "guest_accounts_link_loyalty_local_v1"
kafka.link-loyalty.topic.name = ${?LINK_LOYALTY_KAFKA_TOPIC_NAME}

kafka.verify-loyalty.topic.name = "guest_accounts_verify_loyalty_local_v1"
kafka.verify-loyalty.topic.name = ${?GUEST_ACCOUNTS_KAFKA_TOPIC_NAME}

kafka.notifications.topic.name = "notifications_email_local_v1"
kafka.notifications.topic.name = ${?NOTIFICATIONS_EMAIL_TOPIC_NAME}

lagom.services {
  cas_native = "tcp://127.0.0.1:9042/cas_native"
  cas_native = ${?CAS_NATIVE_URL}
  
  saviynt = "https://dev1-int.api.rccl.com"
  saviynt = ${?SAVIYNT}

  forgerock = "https://dev1-int.api.rccl.com"
  forgerock = ${?FORGEROCK}

  guest_accounts_profiles = "https://dev1-int.api.rccl.com/v1"
  guest_accounts_profiles = ${?GUEST_PROFILES}

  guest_accounts_profile_optins = "https://dev1-int.api.rccl.com/v1"
  guest_accounts_profile_optins = ${?GUEST_PROFILES_OPTINS}

  guest_accounts_authentication = "https://dev1-int.api.rccl.com/v1"
  guest_accounts_authentication = ${?GUEST_ACCOUNTS_AUTHENTICATION}

  guest_accounts_vds = "https://dev1-int.api.rccl.com"
  guest_accounts_vds = ${?VDS}
}

# We override the main configuration to enable autocreate for testing.
lagom.persistence.read-side.cassandra {
  keyspace-autocreate = true
  tables-autocreate = true
}
cassandra-journal {
  keyspace-autocreate = true
  tables-autocreate = true
}

cassandra-snapshot-store {
  keyspace-autocreate = true
  tables-autocreate = true
}

akka {
  extensions = []
  actor.provider = "local"
}

lagom.cluster.exit-jvm-when-system-terminated = off

apigee.appkey = "FXVdg9Z27dvSiIGUMmVCxx73G2HlDTXF"
apigee.appkey = ${?APIGEE_APPKEY}

# -
# Logging and Consul Configuration
# -

serviceName = "guest-accounts-create-account"
serviceName = ${?SERVICE_NAME}

logging.level = "INFO"
logging.level = ${?LOGGING_LEVEL}

logHome = "./resources/logs"
logHome = ${?LOG_HOME}

project = "guest-accounts-create-account"
project = ${?PROJECT}

consul.url = "http://localhost:8500"
consul.url = ${?CONSUL_URL}

include "hateoas.conf"
